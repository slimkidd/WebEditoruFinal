class Solution {
    public void rotate(int[][] matrix) {
        int n = matrix.length;
        int mid_i = 0;
        if(n % 2 == 0) mid_i = n / 2 - 1;
        else mid_i = n / 2;
        for(int i = 0; i <= mid_i; i++){   //this format can reduce the length of the square by two in each nested-for loop 
            for(int j = i; j < n - 1 - i; j++){
                //exchange four elements in a matrix at one time
                int temp = matrix[n - 1 - j][n - 1 - (n - 1 - i)];
                matrix[n - 1 - j][n - 1 - (n - 1 - i)] = matrix[n - 1 - i][n - 1 -j];
                matrix[n - 1 - i][n - 1 - j] = matrix[j][n - 1 - i];
                matrix[j][n - 1 - i] = matrix[i][j];
                matrix[i][j] = temp;
                                 
            }
        }
    }
}
